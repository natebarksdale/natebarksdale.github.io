---
export interface Props {
  tag: string;
  size?: "sm" | "lg";
}

function splitEmojiTag(tagName) {
  if (!tagName || typeof tagName !== "string") return { emoji: "", text: "" };

  const emojiRegex = /(\p{Extended_Pictographic}+)/u;
  const match = tagName.match(emojiRegex);
  
  if (match) {
    return {
      emoji: match[0],
      text: tagName.slice(match[0].length).trim(),
    };
  }
  return { emoji: "", text: tagName };
}

const { tag, tagName, size = "sm" } = Astro.props;
const displayTag = tagName ?? tag ?? "";
const { emoji, text } = splitEmojiTag(tagName);
---

<li
  class={`inline-block ${
    size === "sm" ? "my-1 underline-offset-4" : "my-3 mx-1 underline-offset-8"
  }`}
>
  <a
    href={`/tags/${tag}/`}
    transition:name={tag}
    class={`${size === "sm" ? "text-sm" : "text-lg"} pr-2 group`}
  >
    {emoji && <span class="emoji">{emoji}</span>}
    <span class="tag-text">{text}</span>
  </a>
</li>

<style>
  a {
    @apply relative hover:-top-0.5 hover:text-skin-accent hover:animate-bounce focus-visible:p-1;
  }
  a svg {
    @apply -mr-5 h-6 w-6 scale-95 text-skin-base opacity-80 group-hover:fill-skin-accent;
  }
</style>
