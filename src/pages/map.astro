---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import MapView from "@components/MapView";
import Breadcrumbs from "@components/Breadcrumbs.astro";

// Get posts data
const posts = await getCollection("blog", ({ data }) => !data.draft);
const geotaggedPosts = posts
  .filter(post => post.data.coordinates)
  .map(post => ({
    type: "Feature",
    geometry: {
      type: "Point",
      coordinates: [post.data.coordinates[1], post.data.coordinates[0]],
    },
    properties: {
      title: post.data.title,
      slug: post.slug,
      haiku: post.data.haiku,
    },
  }));

const geojson = {
  type: "FeatureCollection",
  features: geotaggedPosts,
};

// Updated variable name to match what's in the environment
const mapboxToken = import.meta.env.PUBLIC_MAPBOX_ACCESS_TOKEN;

// Debug logs
console.log("Server-side token check:", {
  token: mapboxToken ? "[PRESENT]" : "[MISSING]",
  hasToken: !!mapboxToken,
});
---

<script>
  // Log client-side environment variables
  console.log("Client-side env check:", {
    hasToken: !!import.meta.env.PUBLIC_MAPBOX_ACCESS_TOKEN,
  });
</script>
<script is:inline src="/map-diagnostics.js"></script>

<Layout title="Post Map">
  <Header activeNav="map" />
  <Breadcrumbs />
  <main id="main-content">
    <h1 class="mt-1 mb-2 inline-block font-serif text-2xl sm:text-3xl">
      Posts Around the World
    </h1>
    <div id="map-container" class="w-full mt-4 mb-6">
      <MapView
        client:only="react"
        geojson={geojson}
        mapboxToken={mapboxToken}
      />
    </div>
  </main>
  <Footer />
</Layout>

<style>
  main {
    @apply mx-auto w-full max-w-3xl px-4 pb-12;
  }

  /* Add a defined height constraint and overflow handling to the map container */
  #map-container {
    @apply relative;
    min-height: 600px;
    margin-bottom: 300px; /* Add extra margin below the map container */
  }
</style>

<script>
  // Add additional script to ensure the page layout is maintained
  document.addEventListener("DOMContentLoaded", () => {
    // Ensure the content below the map is visible by adding a class to the map container
    const mapContainer = document.getElementById("map-container");
    if (mapContainer) {
      mapContainer.classList.add("map-loaded");
    }

    // Log page structure for debugging
    console.log(
      "Main content elements:",
      document.querySelectorAll("#main-content > *").length
    );
  });
</script>
