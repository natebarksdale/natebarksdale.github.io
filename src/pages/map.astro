---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import MapView from "@components/MapView";
import Breadcrumbs from "@components/Breadcrumbs.astro";

// Get posts data
const posts = await getCollection("blog", ({ data }) => !data.draft);
const geotaggedPosts = posts
  .filter(post => post.data.coordinates)
  .map(post => ({
    type: "Feature",
    geometry: {
      type: "Point",
      coordinates: [post.data.coordinates[1], post.data.coordinates[0]],
    },
    properties: {
      title: post.data.title,
      slug: post.slug,
      haiku: post.data.haiku,
    },
  }));

const geojson = {
  type: "FeatureCollection",
  features: geotaggedPosts,
};

// Updated variable name to match what's in the environment
const mapboxToken = import.meta.env.PUBLIC_MAPBOX_ACCESS_TOKEN;

console.log("Server-side token check:", {
  token: mapboxToken,
  hasToken: !!mapboxToken,
  envKeys: Object.keys(import.meta.env),
});

// Debug log to verify coordinates
console.log(
  "GeoJSON features:",
  geojson.features.map(f => ({
    title: f.properties.title,
    coordinates: f.geometry.coordinates,
    originalCoords: posts.find(p => p.data.title === f.properties.title)?.data
      .coordinates,
  }))
);
---

<script>
  // Log client-side environment variables
  console.log("Client-side env check:", {
    hasToken: !!import.meta.env.PUBLIC_MAPBOX_TOKEN,
    envKeys: Object.keys(import.meta.env),
  });
</script>

<Layout title="Post Map">
  <Header activeNav="map" />
  <main>
    <Breadcrumbs />
    <h1 class="my-4 inline-block font-serif text-3xl sm:my-8 sm:text-5xl">
      Posts Around the World
    </h1>
    <div class="w-full rounded-lg overflow-hidden bg-skin-fill mt-6">
      <MapView
        client:only="react"
        geojson={geojson}
        mapboxToken={mapboxToken}
      />
    </div>
  </main>
  <Footer />
</Layout>

<style>
  main {
    @apply mx-auto w-full max-w-3xl px-4 pb-12;
  }
</style>
