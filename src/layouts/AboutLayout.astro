---
import { SITE } from "@config";
import Breadcrumbs from "@components/Breadcrumbs.astro";
import Footer from "@components/Footer.astro";
import Header from "@components/Header.astro";
import Layout from "./Layout.astro";

export interface Props {
  frontmatter: {
    title: string;
    description?: string;
  };
}

const { frontmatter } = Astro.props;
---

<Layout title={`${frontmatter.title} | ${SITE.title}`}>
  <Header activeNav="about" />
  <Breadcrumbs />
  <main id="main-content">
    <section id="about" class="prose mb-28 max-w-3xl prose-img:border-0">
      <h1 class="text-3xl font-serif sm:text-5xl my-4 sm:my-8 normal-case">
        {frontmatter.title}
      </h1>
      <slot />
    </section>
  </main>
  <Footer />
</Layout>

<style>
  /* Add styles to match homepage font sizing */
  :global(#about p:first-of-type),
  :global(#about p:second-of-type),
  :global(#about > ul:first-of-type li) {
    @apply font-serif my-2 text-2xl;
  }
  :global(#about p:second-of-type) {
    @apply px-3 py-1 rounded-md;
    background-color: #fff9dd; /* Warm yellow */
  }

  /* Format first section as full width */
  :global(#about > p:first-of-type),
  :global(#about > ul:first-of-type) {
    @apply mb-8;
  }

  /* Create tile layout for sections */
  :global(#about h1) {
    @apply font-serif text-3xl font-medium mt-8 mb-2;
  }

  /* Create section tiles with heading and content */
  @media (min-width: 640px) {
    :global(#about) {
      @apply flex flex-wrap justify-between after:content-[''] after:w-[48%];
    }

    /* First tile (intro paragraph) is full-width */
    :global(#about > p:first-of-type),
    :global(#about > ul:first-of-type) {
      @apply w-full;
    }

    /* Each section (h1 + content until next h1) becomes a tile */
    :global(#about div.section-tile) {
      @apply w-[48%] mb-8 p-6 rounded-lg transition-all duration-300;
    }

    :global(#about div.section-tile:hover) {
      @apply bg-gray-50 dark:bg-gray-800 shadow-md;
    }

    /* Style the headings inside tiles */
    :global(#about div.section-tile h1) {
      @apply mb-4 pb-2 border-b border-gray-200 dark:border-gray-700;
    }
  }

  /* Animation styles */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  #about > * {
    animation: fadeIn 0.5s ease-out forwards;
    opacity: 0;
  }

  :global(#about div.section-tile) {
    animation: fadeIn 0.5s ease-out forwards;
    opacity: 0;
  }

  #about > *:nth-child(1),
  :global(#about div.section-tile:nth-child(1)) {
    animation-delay: 0.1s;
  }
  #about > *:nth-child(2),
  :global(#about div.section-tile:nth-child(2)) {
    animation-delay: 0.2s;
  }
  #about > *:nth-child(3),
  :global(#about div.section-tile:nth-child(3)) {
    animation-delay: 0.3s;
  }
  #about > *:nth-child(4),
  :global(#about div.section-tile:nth-child(4)) {
    animation-delay: 0.4s;
  }
  #about > *:nth-child(5),
  :global(#about div.section-tile:nth-child(5)) {
    animation-delay: 0.5s;
  }
  #about > *:nth-child(6),
  :global(#about div.section-tile:nth-child(6)) {
    animation-delay: 0.6s;
  }
  #about > *:nth-child(7),
  :global(#about div.section-tile:nth-child(7)) {
    animation-delay: 0.7s;
  }
  #about > *:nth-child(8),
  :global(#about div.section-tile:nth-child(8)) {
    animation-delay: 0.8s;
  }
  #about > *:nth-child(9),
  :global(#about div.section-tile:nth-child(9)) {
    animation-delay: 0.9s;
  }
  #about > *:nth-child(10),
  :global(#about div.section-tile:nth-child(10)) {
    animation-delay: 1s;
  }
  #about > *:nth-child(n + 11),
  :global(#about div.section-tile:nth-child(n + 11)) {
    animation-delay: 1.1s;
  }
</style>

<script>
  // This script wraps each section (h1 + content until next h1) into a section-tile div
  document.addEventListener("DOMContentLoaded", () => {
    const aboutSection = document.getElementById("about");
    if (!aboutSection) return;

    // // Skip the main heading (h1 that's the title)
    // const mainHeading = aboutSection.querySelector("h1");
    // if (!mainHeading) return;

    // Get all h1 elements after the main heading
    const headings = Array.from(aboutSection.querySelectorAll("h1")).filter(
      h => h !== mainHeading
    );
    let sectionTiles = [];

    // For each heading, create a section tile with all content until the next heading
    headings.forEach((heading, index) => {
      const tile = document.createElement("div");
      tile.className = "section-tile";

      // Clone the heading to add to the tile
      const headingClone = heading.cloneNode(true);
      tile.appendChild(headingClone);

      // Get all elements between this heading and the next (or end)
      let nextEl = heading.nextElementSibling;
      const elementsToRemove = [heading];

      while (nextEl && nextEl.tagName !== "H1") {
        const clone = nextEl.cloneNode(true);
        tile.appendChild(clone);

        elementsToRemove.push(nextEl);
        nextEl = nextEl.nextElementSibling;
      }

      // Add the tile to our collection
      sectionTiles.push({ tile, elementsToRemove });
    });

    // Remove the original elements (in reverse order to avoid changing the DOM structure)
    sectionTiles.forEach(({ elementsToRemove }) => {
      elementsToRemove.forEach(el => el.remove());
    });

    // Add all the tiles to the about section
    sectionTiles.forEach(({ tile }) => {
      aboutSection.appendChild(tile);
    });
  });
</script>
